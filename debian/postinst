#!/bin/sh
# postinst script for vx-dga-l-google-chrome-extensions
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
		if ! test -d /opt/google/chrome/extensions ;  then
			mkdir -p /opt/google/chrome/extensions
			chmod +rx /opt/google/chrome/extensions
    	fi
    	DIREXTENSIONS="/opt/google/chrome/extensions/"

    	# Declaramos las extensiones disponibles en el paquete
    	SCREENCASTIFY="/usr/share/vitalinux/google-chrome-extensions/mmeijimgabbpbgpdklnllpncmdofkcpn.json"
		
		# Las asignamos por etiqueta. Si tuviera más se aplicarían todas
		ETIQUETAS=$(migasfree-tags -g)
		if (echo $ETIQUETAS | grep \"SEC-MIGUELSERVET\" &> /dev/null) ; then
			cp ${SCREENCASTIFY} ${DIREXTENSIONS}
		fi

		# Las extensiones deben tener permiso de lectura para todos
		chmod +r ${DIREXTENSIONS}/*
		;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
